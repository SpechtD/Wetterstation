RC51 COMPILER V03.08.10.309,  TEST_C_LCD         02/03/20  19:55:57  PAGE  1

QCW(0x00002F32)

DOS RC51 COMPILER V03.08.10.309, COMPILATION OF MODULE TEST_C_LCD
OBJECT MODULE PLACED IN M:\Code\Test_C_LCD.obj
COMPILER INVOKED BY: QUIET GENERATEDEPFILE OJ(M:\Code\Test_C_LCD.obj) PIN(C:\Rai
            -sonance\Ride\Inc;C:\Raisonance\Ride\Inc\51) PIN(C:\Raisonance\Ride\
            -\inc\51\SiLabs) NOAM CD PR(M:\Code\Test_C_LCD.lst) FP(NOFLOAT) IP N
            -OIS UNSIGNEDCHAR ET(CHAR) PR PL(60) PW(80) OE(1) OT(7,SPEED) RB(0) 
            -MAXERR(25) MAXWAR(25) SM MOD517(NODP8,NOAU) 

stmt level    source
   1          /*
   2          ;Name:      Captain
   3          ;Datum:     25.04.2019
   4          ;Aufgabe:   Test C LCD Display (2 x16 Zeichen) am Port 3 angeschlo
            -ssen
   5          ;Controller:C8051F340
   6          */
   7          //Beachte: Die Datei lcd.c muss im Projektordner sein und mit
   8          //         Add... Item zusätzlich zu dem Projekt hinzugefügt werde
            -n!!!
   9          
  10          #include <stdio.h>									// für sprinf											
  11          #include <C_8051F340.h>
  12          #include <Einstellungen.h>
  13          #include <lcd.c>
  14          
  15          // externe Funktionen in lcd.c; Diese Datei zum Projekt hinzufügen
            -
  16           extern void initlcd (void);						//	Initialisierung LCD-Display a
            -n P0			
  17           extern void loeschenlcd (void);
  18           extern void textlcd (unsigned char *text,unsigned char zeile);	
  19           
  20          void main (void)
  21          	{
  22   1      	unsigned char buf [20] ;	    // Zwischenspeicher für LCD-Text
  23   1      	unsigned char a,b,c;			// Variablen zum Testen der LCD-Ausgabe
  24   1          
  25   1          Grundeinstellungen();	
  26   1      	initlcd ();						//	Initialisierung LCD-Display an P3
  27   1       	loeschenlcd ();				    //	Anzeige löschen	
  28   1          
  29   1          /*
  30   1       	textlcd ("   HGS-Singen",1);	//	Text ausgeben	Achtung " ", nicht
            -  '  '	!	
  31   1       	sprintf (buf," Klasse TG13/3");	//	Test sprintf
  32   1      	textlcd (buf,2);
  33   1          */  
  34   1      	
  35   1      	a = 36;							
  36   1      	b = 42;
  37   1      	c = a + b;							
  38   1      	sprintf (buf,"a = %d b = %d",a,b);
  39   1      	// Text mit Variable formatieren und in buf kopieren		
  40   1      	//	% Ausgabeformat folgt, d Dezimalzahl mit Vorzeichen, a auszuge
            -bende Variable	
  41   1      	textlcd (buf,1);																															
  42   1      	//	Ausgabe des Textpuffers an Zeile 1 des LCD-Displays											
RC51 COMPILER V03.08.10.309,  TEST_C_LCD         02/03/20  19:55:57  PAGE  6

            -		
  43   1        	sprintf (buf,"c = %d",c);	
  44   1        	textlcd (buf,2);																		
  45   1          
  46   1      	while (1); 
  47   1      	} 
  48          
  49          
RC51 COMPILER V03.08.10.309,  TEST_C_LCD         02/03/20  19:55:57  PAGE  8

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION Grundeinstellungen (BEGIN)
                                           ; SOURCE LINE # 9 
0000 75B283         MOV    OSCICN,#083H
                                           ; SOURCE LINE # 11 
0003 75D900         MOV    PCA0MD,#000H
                                           ; SOURCE LINE # 17 
0006 75A4FF         MOV    P0MDOUT,#0FFH
                                           ; SOURCE LINE # 18 
0009 75A5FF         MOV    P1MDOUT,#0FFH
                                           ; SOURCE LINE # 19 
000C 75A6FF         MOV    P2MDOUT,#0FFH
                                           ; SOURCE LINE # 20 
000F 75A7FF         MOV    P3MDOUT,#0FFH
                                           ; SOURCE LINE # 21 
0012 75AEFF         MOV    P4MDOUT,#0FFH
                                           ; SOURCE LINE # 24 
0015 75E240         MOV    XBR1,#040H
                                           ; SOURCE LINE # 12 
0018 22             RET    

            ; FUNCTION Grundeinstellungen (END)

            ; FUNCTION _warte100u (BEGIN)
              ; Register R6R7 is assigned to parameter anzahl
              ; R2R3 is assigned to z1
              ; R4R5 is assigned to z2
                                           ; SOURCE LINE # 37 
0000 8E04           MOV    AR4,R6
0002 8F05           MOV    AR5,R7
0004         ?FOR2:
0004 EC             MOV    A,R4
0005 4D             ORL    A,R5
0006 6016           JZ     ?NXT4
                                           ; SOURCE LINE # 39 
0008 E4             CLR    A
0009 FA             MOV    R2,A
000A 7B03           MOV    R3,#003H
000C         ?FOR3:
000C EA             MOV    A,R2
000D 4B             ORL    A,R3
000E 6007           JZ     ?NXT5
0010 EB             MOV    A,R3
0011 1B             DEC    R3
0012 70F8           JNZ    ?FOR3
0014 1A             DEC    R2
0015 80F5           SJMP   ?FOR3
0017         ?NXT5:
                                           ; SOURCE LINE # 37 
0017 ED             MOV    A,R5
0018 1D             DEC    R5
0019 70E9           JNZ    ?FOR2
001B 1C             DEC    R4
001C 80E6           SJMP   ?FOR2
001E         ?NXT4:
                                           ; SOURCE LINE # 41 
001E 22             RET    

            ; FUNCTION _warte100u (END)
RC51 COMPILER V03.08.10.309,  TEST_C_LCD         02/03/20  19:55:57  PAGE  2


            ; FUNCTION _LCDbefehl (BEGIN)
              ; Register R7 is assigned to parameter befehl
              ; R6 is assigned to a1
                                           ; SOURCE LINE # 51 
0000 75F004         MOV    B,#004H
0003 EF             MOV    A,R7
0004         ?LAB10:
0004 23             RL     A
0005 D5F0FC         DJNZ   B,?LAB10
                                           ; SOURCE LINE # 52 
0008 540F           ANL    A,#00FH
000A 4410           ORL    A,#010H
                                           ; SOURCE LINE # 53 
000C F5B0           MOV    P3,A
                                           ; SOURCE LINE # 54 
000E E4             CLR    A
000F F5B0           MOV    P3,A
              ; R6 is assigned to a1
                                           ; SOURCE LINE # 56 
0011 EF             MOV    A,R7
0012 540F           ANL    A,#00FH
0014 4410           ORL    A,#010H
                                           ; SOURCE LINE # 57 
0016 F5B0           MOV    P3,A
                                           ; SOURCE LINE # 58 
0018 E4             CLR    A
0019 F5B0           MOV    P3,A
                                           ; SOURCE LINE # 61 
001B FE             MOV    R6,A
001C 7FC8           MOV    R7,#0C8H
001E 020000  R      LJMP   _warte100u

            ; FUNCTION _LCDbefehl (END)

            ; FUNCTION initlcd (BEGIN)
                                           ; SOURCE LINE # 99 
0000 75B013         MOV    P3,#013H
                                           ; SOURCE LINE # 100 
0003 75B003         MOV    P3,#003H
                                           ; SOURCE LINE # 101 
0006 E4             CLR    A
0007 FE             MOV    R6,A
0008 7FC8           MOV    R7,#0C8H
000A 120000  R      LCALL  _warte100u
                                           ; SOURCE LINE # 102 
000D 75B013         MOV    P3,#013H
                                           ; SOURCE LINE # 103 
0010 75B003         MOV    P3,#003H
                                           ; SOURCE LINE # 104 
0013 120000  R      LCALL  _warte100u
                                           ; SOURCE LINE # 105 
0016 75B013         MOV    P3,#013H
                                           ; SOURCE LINE # 106 
0019 75B003         MOV    P3,#003H
                                           ; SOURCE LINE # 107 
001C 120000  R      LCALL  _warte100u
                                           ; SOURCE LINE # 108 
RC51 COMPILER V03.08.10.309,  TEST_C_LCD         02/03/20  19:55:57  PAGE  3

001F 75B012         MOV    P3,#012H
                                           ; SOURCE LINE # 109 
0022 75B002         MOV    P3,#002H
                                           ; SOURCE LINE # 110 
0025 120000  R      LCALL  _warte100u
                                           ; SOURCE LINE # 111 
0028 7F28           MOV    R7,#028H
002A 120000  R      LCALL  _LCDbefehl
                                           ; SOURCE LINE # 112 
002D 7F0C           MOV    R7,#00CH
002F 120000  R      LCALL  _LCDbefehl
                                           ; SOURCE LINE # 113 
0032 7F06           MOV    R7,#006H
0034 020000  R      LJMP   _LCDbefehl

            ; FUNCTION initlcd (END)

            ; FUNCTION loeschenlcd (BEGIN)
                                           ; SOURCE LINE # 120 
0000 7F01           MOV    R7,#001H
0002 020000  R      LJMP   _LCDbefehl

            ; FUNCTION loeschenlcd (END)

            ; FUNCTION _charlcd (BEGIN)
              ; Register R7 is assigned to parameter zeichen
              ; R6 is assigned to a1
                                           ; SOURCE LINE # 131 
0000 75F004         MOV    B,#004H
0003 EF             MOV    A,R7
0004         ?LAB18:
0004 23             RL     A
0005 D5F0FC         DJNZ   B,?LAB18
                                           ; SOURCE LINE # 133 
0008 540F           ANL    A,#00FH
000A 4490           ORL    A,#090H
                                           ; SOURCE LINE # 134 
000C F5B0           MOV    P3,A
                                           ; SOURCE LINE # 135 
000E 5480           ANL    A,#080H
0010 F5B0           MOV    P3,A
              ; R6 is assigned to a1
                                           ; SOURCE LINE # 137 
0012 EF             MOV    A,R7
0013 540F           ANL    A,#00FH
0015 4490           ORL    A,#090H
                                           ; SOURCE LINE # 138 
0017 F5B0           MOV    P3,A
                                           ; SOURCE LINE # 139 
0019 5480           ANL    A,#080H
001B F5B0           MOV    P3,A
                                           ; SOURCE LINE # 142 
001D 7E00           MOV    R6,#000H
001F 7FC8           MOV    R7,#0C8H
0021 020000  R      LJMP   _warte100u

            ; FUNCTION _charlcd (END)

RC51 COMPILER V03.08.10.309,  TEST_C_LCD         02/03/20  19:55:57  PAGE  4

            ; FUNCTION _cursorpos (BEGIN)
              ; Register R7 is assigned to parameter position
                                           ; SOURCE LINE # 167 
0000 EF             MOV    A,R7
0001 4480           ORL    A,#080H
0003 FF             MOV    R7,A
0004 020000  R      LJMP   _LCDbefehl

            ; FUNCTION _cursorpos (END)

            ; FUNCTION cursorhome (BEGIN)
                                           ; SOURCE LINE # 173 
0000 7F02           MOV    R7,#002H
0002 020000  R      LJMP   _LCDbefehl

            ; FUNCTION cursorhome (END)

            ; FUNCTION _textlcd (BEGIN)
                                           ; SOURCE LINE # 178 
0000 8B00    R      MOV    text,R3
0002 8A00    R      MOV    text+01H,R2
0004 8900    R      MOV    text+02H,R1
0006 8D00    R      MOV    zeile,R5
                                           ; SOURCE LINE # 180 
0008 BD0105         CJNE   R5,#001H,?NXT13
000B E4             CLR    A
000C FF             MOV    R7,A
000D 120000  R      LCALL  _cursorpos
0010         ?NXT13:
                                           ; SOURCE LINE # 181 
0010 E500    R      MOV    A,zeile
0012 B40205         CJNE   A,#002H,?NXT14
0015 7F40           MOV    R7,#040H
0017 120000  R      LCALL  _cursorpos
001A         ?NXT14:
                                           ; SOURCE LINE # 182 
001A E500    R      MOV    A,zeile
001C B40305         CJNE   A,#003H,?NXT15
001F 7F10           MOV    R7,#010H
0021 120000  R      LCALL  _cursorpos
0024         ?NXT15:
                                           ; SOURCE LINE # 183 
0024 E500    R      MOV    A,zeile
0026 B40405         CJNE   A,#004H,?WHILE1
0029 7F50           MOV    R7,#050H
002B 120000  R      LCALL  _cursorpos
002E         ?WHILE1:
                                           ; SOURCE LINE # 184 
002E AB00    R      MOV    R3,text
0030 AA00    R      MOV    R2,text+01H
0032 A900    R      MOV    R1,text+02H
0034 120000  R      LCALL  IPGN1?C
0037 601E           JZ     ?NXT17
                                           ; SOURCE LINE # 186 
0039 AB00    R      MOV    R3,text
003B AA00    R      MOV    R2,text+01H
003D A900    R      MOV    R1,text+02H
003F 0500    R      INC    text+02H
RC51 COMPILER V03.08.10.309,  TEST_C_LCD         02/03/20  19:55:57  PAGE  5

0041 E500    R      MOV    A,text+02H
0043 7002           JNZ    ?LAB26
0045 0500    R      INC    text+01H
0047         ?LAB26:
0047 120000  R      LCALL  IPGN1?C
004A FF             MOV    R7,A
004B 120000  R      LCALL  _charlcd
                                           ; SOURCE LINE # 187 
004E E4             CLR    A
004F FE             MOV    R6,A
0050 7FC8           MOV    R7,#0C8H
0052 120000  R      LCALL  _warte100u
0055 80D7           SJMP   ?WHILE1
0057         ?NXT17:
                                           ; SOURCE LINE # 190 
0057 22             RET    

            ; FUNCTION _textlcd (END)

            ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 25 
0000 120000  R      LCALL  Grundeinstellungen
                                           ; SOURCE LINE # 26 
0003 120000  R      LCALL  initlcd
                                           ; SOURCE LINE # 27 
0006 120000  R      LCALL  loeschenlcd
                                           ; SOURCE LINE # 38 
0009 E4             CLR    A
000A C0E0           PUSH   ACC
000C 742A           MOV    A,#02AH
000E C0E0           PUSH   ACC
0010 E4             CLR    A
0011 C0E0           PUSH   ACC
0013 7424           MOV    A,#024H
0015 C0E0           PUSH   ACC
0017 7B01           MOV    R3,#001H
0019 7900    R      MOV    R1,#buf
001B E4             CLR    A
001C FA             MOV    R2,A
001D 7D05           MOV    R5,#005H
001F 7C00    R      MOV    R4,#HIGH(?STR?TEST_C_LCD?BASE)
0021 7800    R      MOV    R0,#LOW(?STR?TEST_C_LCD?BASE)
0023 120000  R      LCALL  ?sprintf
0026 74FC           MOV    A,#0FCH
0028 2581           ADD    A,SP
002A F581           MOV    SP,A
                                           ; SOURCE LINE # 41 
002C 7B01           MOV    R3,#001H
002E 7900    R      MOV    R1,#buf
0030 E4             CLR    A
0031 FA             MOV    R2,A
0032 7D01           MOV    R5,#001H
0034 120000  R      LCALL  _textlcd
                                           ; SOURCE LINE # 43 
0037 E4             CLR    A
0038 C0E0           PUSH   ACC
003A 744E           MOV    A,#04EH
003C C0E0           PUSH   ACC
RC51 COMPILER V03.08.10.309,  TEST_C_LCD         02/03/20  19:55:57  PAGE  7

003E 7B01           MOV    R3,#001H
0040 7900    R      MOV    R1,#buf
0042 E4             CLR    A
0043 FA             MOV    R2,A
0044 7D05           MOV    R5,#005H
0046 7C00    R      MOV    R4,#HIGH(?STR?TEST_C_LCD?BASE + 00EH)
0048 7800    R      MOV    R0,#LOW(?STR?TEST_C_LCD?BASE + 00EH)
004A 120000  R      LCALL  ?sprintf
004D 1581           DEC    SP
004F 1581           DEC    SP
                                           ; SOURCE LINE # 44 
0051 7B01           MOV    R3,#001H
0053 7900    R      MOV    R1,#buf
0055 E4             CLR    A
0056 FA             MOV    R2,A
0057 7D02           MOV    R5,#002H
0059 120000  R      LCALL  _textlcd
005C         ?WHILE3:
                                           ; SOURCE LINE # 46 
005C 80FE           SJMP   ?WHILE3

            ; FUNCTION main (END)

RC51 COMPILER V03.08.10.309,  TEST_C_LCD         02/03/20  19:55:58  PAGE  9



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    379    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

RC51 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
